<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Offer Management</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css">
    <style>
        body {
            background-color: #f8f9fa;
        }

        .card {
            margin: 20px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        }

        .table thead {
            background-color: #343a40;
            color: white;
        }

        .btn-add {
            background-color: #106123;
            color: white;
        }

        .btn-add:hover {
            background-color: #218838;
        }

        .btn-danger,
        .btn-success {
            margin-right: 5px;
        }

        .form-label {
            font-weight: bold;
        }


        @media (max-width: 768px) {
            .navbar ul {
                flex-direction: column;
                align-items: center;
            }

            .table {
                font-size: 12px;
            }

            .table th,
            .table td {
                padding: 10px;
            }
        }

        .navbar {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }


        .navbar ul {
            display: flex;
            gap: 25px;
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .navbar ul li a {
            text-decoration: none;
            color: #333;
            font-weight: bold;
        }

        .navbar ul li a#same {
            color: #9e7317;
            font-weight: 800;

        }

        .icons {
            display: flex;
            gap: 10px;
            position: absolute;
            right: 20px;
        }

        .text-dangerEdit {
            color: red;
        }
    </style>
</head>

<body>
    <nav class="navbar">
        <ul>
            <li><a href="/admin/dashboard">Dashboard</a></li>
            <li><a href="/admin/Users">Users</a></li>
            <li><a href="/admin/products">Products</a></li>
            <li><a href="/admin/orders">Orders</a></li>
            <li><a href="/admin/coupon">Coupon</a></li>
            <li><a id="same" href="#">Offers</a></li>
            <li><a href="/admin/inventory">Inventory</a></li>
            <li><a href="/admin/categories">Categories</a></li>
            <li><a href="/admin/salesReport">Sales Report</a></li>
        </ul>
        <div class="icons">
            <span>ðŸ””</span>
            <a href="/admin/profile"><span>ðŸ‘¤</span></a>
        </div>
    </nav>

    <div class="container mt-5">
        <div class="card">
            <div class="card-header d-flex justify-content-between align-items-center">
                <h3>Offer Management</h3>
                <button class="btn btn-add" data-bs-toggle="modal" data-bs-target="#addOfferModal">
                    Add Offer
                </button>
            </div>
            <div class="card-body">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Offer Name</th>
                            <th>Type</th>
                            <th>Applicable To</th>
                            <th>Select Product</th>
                            <th>Discount</th>
                            <th>Expiry Date</th>
                            <th>Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        {{#each offerss}}
                        <tr>
                            <td>{{this.offerName}}</td>
                            <td>{{this.discountType}}</td>
                            <td>{{this.applicableTo}}</td>
                            <td>
                                {{#if (eq this.applicableTo "Product")}}
                                {{#each this.products}}
                                <span>{{this.name}}</span>{{#unless @last}}, {{/unless}}
                                {{/each}}
                                {{else if (eq this.applicableTo "Category")}}
                                {{#each this.categories}}
                                <span>{{this.name}}</span>{{#unless @last}}, {{/unless}}
                                {{/each}}
                                {{else}}
                                N/A
                                {{/if}}
                            </td>
                            <td>{{this.discountValue}}</td>
                            <td>{{formatDate this.expiryDate}}</td>
                            <td>
                                <button class="btn btn-success btn-sm" data-bs-toggle="modal"
                                    data-bs-target="#editCouponModal-{{this._id}}">
                                    Edit
                                </button>
                                <form action="/admin/offers/delete/{{this._id}}" method="POST"
                                    style="display:inline-block;">
                                    <button type="submit" class="btn btn-danger btn-sm">Delete</button>
                                </form>
                            </td>
                        </tr>
                        {{/each}}
                    </tbody>
                </table>
                </table>
            </div>
        </div>
    </div>

    <!-- Add Offer Modal -->
    <div class="modal fade" id="addOfferModal" tabindex="-1" aria-labelledby="addOfferModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="/admin/offers/add" method="POST" id="offerForm">
                    <div class="modal-header">
                        <h5 class="modal-title" id="addOfferModalLabel">Add Offer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="offerName" class="form-label">Offer Name</label>
                            <input type="text" class="form-control" name="offerName" id="offerName">
                            <small class="text-danger" id="offerNameError"></small>
                        </div>

                        <label for="applicableTo">Applicable To:</label>
                        <select name="applicableTo" id="applicableTo">
                            <option value="" disabled selected>Select Applicable Option</option>
                            <option value="Product">Product</option>
                            <option value="Category">Category</option>
                        </select>
                        <small class="text-danger" id="applicableToError"></small>

                        <input type="hidden" name="applicableToId" id="applicableToId" />

                        <div id="productSelection" style="display:none;">
                            <label>Select Products:</label>
                            {{#each products}}
                            <div>
                                <input type="checkbox" name="products[]" value="{{this._id}}" id="product_{{this._id}}">
                                <label for="product_{{this._id}}">{{this.name}}</label>
                            </div>
                            {{/each}}
                        </div>

                        <div id="categorySelection" style="display:none;">
                            <label>Select Categories:</label>
                            {{#each categories}}
                            <div>
                                <input type="checkbox" name="categories[]" value="{{this._id}}"
                                    id="category_{{this._id}}">
                                <label for="category_{{this._id}}">{{this.name}}</label>
                            </div>
                            {{/each}}
                        </div>


                        <div class="mb-3">
                            <label for="discountType" class="form-label">Discount Type</label>
                            <select class="form-select" name="discountType" id="discountType">
                                <option value="percentage">Percentage</option>
                                <option value="fixed">Fixed</option>
                            </select>
                            <small class="text-danger" id="discountTypeError"></small>
                        </div>

                        <div class="mb-3">
                            <label for="discountValue" class="form-label">Discount Value</label>
                            <input type="number" class="form-control" name="discountValue" id="discountValue">
                            <small class="text-danger" id="discountValueError"></small>
                        </div>

                        <div class="mb-3">
                            <label for="expiryDate" class="form-label">Expiry Date</label>
                            <input type="date" class="form-control" name="expiryDate" id="expiryDate">
                            <small class="text-danger" id="expiryDateError"></small>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Add Offer</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    <!-- Edit Offer Modal -->
    {{#each offerss}}
    <div class="modal fade" id="editCouponModal-{{this._id}}" tabindex="-1"
        aria-labelledby="editOfferModalLabel-{{this._id}}" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <form action="/admin/offers/edit/{{this._id}}" method="POST" class="modalEdit" id="modalEditn">
                    <div class="modal-header">
                        <h5 class="modal-title" id="editCouponModalLabel-{{this._id}}">Edit Offer</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                    </div>
                    <div class="modal-body">
                        <div class="mb-3">
                            <label for="offerName-{{this._id}}" class="form-label">Offer Name</label>
                            <input type="text" class="form-control" name="offerName" id="offerName-{{this._id}}"
                                value="{{this.offerName}}">
                            <div class="text-dangerEdit" id="offerNameErrorEdit"></div>
                        </div>

                        <label for="applicableTo-{{this._id}}">Applicable To:</label>
                        <select name="applicableTo" id="applicableTo-{{this._id}}"
                            class="form-select applicableToDropdown" data-id="{{this._id}}">
                            <option value="" disabled>Select Applicable Option</option>
                            <option value="Product" {{#if (eq this.applicableTo "Product" )}}selected{{/if}}>Product
                            </option>
                            <option value="Category" {{#if (eq this.applicableTo "Category" )}}selected{{/if}}>Category
                            </option>
                        </select>
                        <div class="text-dangerEdit" id="applicableToErrorEdit"></div>

                        <input type="hidden" name="applicableToId" id="applicableToId" />

                        <div id="productSelection-{{this._id}}" class="selection-section"
                            style="display: {{#if (eq this.applicableTo " Product")}}block{{else}}{{/if}};">
                            <label>Select Products:</label>
                            {{#each ../products}}
                            <div>
                                <input type="checkbox" name="products[]" value="{{this._id}}"
                                    id="product_{{this._id}}_{{../_id}}" {{#if (includes ../products
                                    this._id)}}checked{{/if}}>
                                <label for="product_{{this._id}}_{{../_id}}">{{this.name}}</label>
                            </div>
                            {{/each}}
                            <div class="text-danger" id="productCategoryErrorEdit"></div>
                        </div>

                        <!-- Category Selection -->
                        <div id="categorySelection-{{this._id}}" class="selection-section"
                            style="display: {{#if (eq this.applicableTo " Category")}}block{{else}}none{{/if}};">
                            <label>Select Categories:</label>
                            {{#each ../categories}}
                            <div>
                                <input type="checkbox" name="categories[]" value="{{this._id}}"
                                    id="category_{{this._id}}_{{../_id}}" {{#if (includes ../categories
                                    this._id)}}checked{{/if}}>
                                <label for="category_{{this._id}}_{{../_id}}">{{this.name}}</label>
                                <div class="text-dangerEdit" id="productCategoryError"></div>
                            </div>
                            {{/each}}
                        </div>


                        <div class="mb-3">
                            <label for="discountType-{{this._id}}" class="form-label">Discount Type</label>
                            <select class="form-select" name="discountType" id="discountType-{{this._id}}">
                                <option value="percentage" {{#if (eq this.discountType 'percentage' )}}selected{{/if}}>
                                    Percentage</option>
                                <option value="fixed" {{#if (eq this.discountType 'fixed' )}}selected{{/if}}>Fixed
                                </option>
                            </select>
                            <div class="text-dangerEdit" id="discountTypeError"></div>
                        </div>
                        <div class="mb-3">
                            <label for="discountValue-{{this._id}}" class="form-label">Discount Value</label>
                            <input type="number" class="form-control" name="discountValue"
                                id="discountValue-{{this._id}}" value="{{this.discountValue}}">
                            <div class="text-dangerEdit" id="discountValueErrorEdit"></div>
                        </div>
                        <div class="mb-3">
                            <label for="expiryDate-{{this._id}}" class="form-label">Expiry Date</label>
                            <input type="date" class="form-control" name="expiryDate" id="expiryDate-{{this._id}}"
                                value="{{formatDateForInput this.expiryDate}}">
                            <div class="text-dangerEdit" id="expiryDateErrorEdit"></div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-success">Update Coupon</button>
                    </div>
                </form>
            </div>
        </div>
    </div>
    {{/each}}

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


    <!--============add=========-->
    <script>
        document.getElementById('applicableTo').addEventListener('change', function () {
            var applicableTo = this.value;
            if (applicableTo === 'Product') {
                document.getElementById('productSelection').style.display = 'block';
                document.getElementById('categorySelection').style.display = 'none';
                document.getElementById('applicableToId').value = 'Product';
            } else if (applicableTo === 'Category') {
                document.getElementById('categorySelection').style.display = 'block';
                document.getElementById('productSelection').style.display = 'none';
                document.getElementById('applicableToId').value = 'Category';
            } else {
                document.getElementById('productSelection').style.display = 'none';
                document.getElementById('categorySelection').style.display = 'none';
            }
        });
    </script>

    <!--==============add offer validation=========-->
    <script>
        document.getElementById('offerForm').addEventListener('submit', function (e) {
            e.preventDefault();

            document.querySelectorAll('.text-danger').forEach(function (element) {
                element.textContent = '';
            });

            const offerName = document.getElementById('offerName').value.trim();
            const applicableTo = document.getElementById('applicableTo').value;
            const discountType = document.getElementById('discountType').value;
            const discountValue = document.getElementById('discountValue').value;
            const expiryDate = document.getElementById('expiryDate').value;
            const products = [...document.querySelectorAll('input[name="products[]"]:checked')].map(input => input.value);
            const categories = [...document.querySelectorAll('input[name="categories[]"]:checked')].map(input => input.value);

            let isValid = true;

            if (!offerName) {
                document.getElementById('offerNameError').textContent = 'Offer name is required.';
                isValid = false;
            }

            if (!['Product', 'Category'].includes(applicableTo)) {
                document.getElementById('applicableToError').textContent = 'Applicable To must be either "Product" or "Category".';
                isValid = false;
            }

            if (applicableTo === 'Product' && (!products || products.length === 0)) {
                document.getElementById('productCategoryError').textContent = 'At least one product must be selected for a product-specific offer.';
                isValid = false;
            }

            if (applicableTo === 'Category' && (!categories || categories.length === 0)) {
                document.getElementById('productCategoryError').textContent = 'At least one category must be selected for a category-specific offer.';
                isValid = false;
            }

            if (!['percentage', 'fixed'].includes(discountType)) {
                document.getElementById('discountTypeError').textContent = 'Discount type must be either "percentage" or "fixed".';
                isValid = false;
            }

            if (!discountValue || discountValue <= 0) {
                document.getElementById('discountValueError').textContent = 'Discount value must be a positive number.';
                isValid = false;
            } else if (discountType === 'percentage' && (discountValue <= 0 || discountValue > 100)) {
                document.getElementById('discountValueError').textContent = 'Percentage discount must be between 1 and 100.';
                isValid = false;
            }

            if (!expiryDate) {
                document.getElementById('expiryDateError').textContent = 'Expiry Date is required.';
                isValid = false;
            } else if (isNaN(new Date(expiryDate).getTime())) {
                document.getElementById('expiryDateError').textContent = 'A valid expiry date is required.';
                isValid = false;
            } else if (new Date(expiryDate) <= new Date()) {
                document.getElementById('expiryDateError').textContent = 'Expiry date must be in the future.';
                isValid = false;
            }

            if (isValid) {
                e.target.submit();
            }
        });
    </script>


    <!--======================edit======================-->
    <script>
        document.querySelectorAll('.applicableToDropdown').forEach((dropdown) => {
            dropdown.addEventListener('change', (event) => {
                const selectedValue = event.target.value;
                const id = event.target.dataset.id;

                const productSection = document.querySelector(`#productSelection-${id}`);
                const categorySection = document.querySelector(`#categorySelection-${id}`);

                if (selectedValue === 'Product') {
                    productSection.style.display = 'block';
                    categorySection.style.display = 'none';
                } else if (selectedValue === 'Category') {
                    productSection.style.display = 'none';
                    categorySection.style.display = 'block';
                }
            });
        });
    </script>

    <!--=================edit modal validation==================-->
    <script>
        document.querySelectorAll('.modalEdit').forEach((form) => {
            form.addEventListener('submit', function (e) {
                e.preventDefault();

                // Clear all error messages
                form.querySelectorAll('.text-dangerEdit').forEach((element) => {
                    element.textContent = '';
                });

                // Fetch input values
                const offerName = form.querySelector('input[name="offerName"]').value.trim();
                const applicableTo = form.querySelector('select[name="applicableTo"]').value;
                const discountType = form.querySelector('select[name="discountType"]').value;
                const discountValue = parseFloat(form.querySelector('input[name="discountValue"]').value); const expiryDate = form.querySelector('input[name="expiryDate"]').value;
                const products = [...form.querySelectorAll('input[name="products[]"]:checked')].map(input => input.value);
                const categories = [...form.querySelectorAll('input[name="categories[]"]:checked')].map(input => input.value);

                const errorDiv = form.querySelector('#discountValueErrorEdit');
                errorDiv.textContent = '';

                let isValid = true;

                // Validate Offer Name
                if (!offerName) {
                    const errorDiv = form.querySelector('#offerNameErrorEdit');
                    errorDiv.textContent = 'Offer name is required.';
                    isValid = false;
                }

                // Validate Applicable To
                if (!['Product', 'Category'].includes(applicableTo)) {
                    const errorDiv = form.querySelector('#applicableToErrorEdit');
                    errorDiv.textContent = 'Applicable To must be either "Product" or "Category".';
                    isValid = false;
                }

                // Validate Product Selection
                if (applicableTo === 'Product' && (!products || products.length === 0)) {
                    const errorDiv = form.querySelector('#productCategoryErrorEdit');
                    errorDiv.textContent = 'At least one product must be selected for a product-specific offer.';
                    isValid = false;
                }

                // Validate Category Selection
                if (applicableTo === 'Category' && (!categories || categories.length === 0)) {
                    const errorDiv = form.querySelector('#productCategoryErrorEdit');
                    errorDiv.textContent = 'At least one category must be selected for a category-specific offer.';
                    isValid = false;
                }

                // Validate Discount Value
                if (!discountValue || discountValue <= 0) {
                    const errorDiv = form.querySelector('#discountValueErrorEdit');
                    errorDiv.textContent = 'Discount value must be a positive number.';
                    isValid = false;
                } else if (discountType === 'percentage' && discountValue > 100) {
                    errorDiv.textContent = 'Percentage discount must not exceed 100%.';
                    isValid = false;
                }

                // Validate Expiry Date
                if (!expiryDate || new Date(expiryDate) < new Date()) {
                    const errorDiv = form.querySelector('#expiryDateErrorEdit');
                    errorDiv.textContent = 'Expiry date cannot be empty or in the past.';
                    isValid = false;
                }

                // Submit form if valid
                if (isValid) {
                    form.submit();
                }
            });
        });
    </script>


</body>

</html>