<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Category Management</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f4f4;
            padding-top: 50px;
        }

        .container {
            width: 80%;
            margin: 20px auto;
            background: white;
            padding: 20px;
            border-radius: 5px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .add-category-button-container {
            display: flex;
            justify-content: flex-end;
            margin-bottom: 10px;
        }

        .add-category-button {
            background-color: #007BFF;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            cursor: pointer;
            font-size: 16px;
            text-decoration: none;
        }

        .add-category-button:hover {
            background-color: #0056b3;
        }

        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th,
        td {
            padding: 12px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #0d2c4d;
            color: white;
        }

        tr:hover {
            background-color: #f1f1f1;
        }

        button,
        .button-link {
            padding: 8px 12px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
            font-size: 16px;
            color: white;
            text-decoration: none;
        }

        .list-button {
            background-color: #0a4218;
        }

        .unlist-button {
            background-color: #991524;
        }

        .edit-button {
            background-color: #574716;
        }

        .list-button:hover {
            background-color: #0c2b13;
        }

        .unlist-button:hover {
            background-color: #6e0c16;
        }

        .edit-button:hover {
            background-color: #e0a800;
        }

        .header {
            position: fixed;
            top: 0;
            width: 100%;
            z-index: 1000;
        }

        .navbar {
            display: flex;
            justify-content: center;
            align-items: center;
            padding: 20px;
            background-color: #fff;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            position: relative;
        }


        .navbar ul {
            display: flex;
            gap: 25px;
            list-style: none;
            padding: 0;
            margin: 0;
        }

        .navbar ul li a {
            text-decoration: none;
            color: #333;
            font-weight: bold;
        }

        .navbar ul li a#same {
            color: #9e7317;
            font-weight: 800;
        }

        .icons {
            display: flex;
            gap: 10px;
            position: absolute;
            right: 20px;
        }
    </style>
</head>

<body>
    <header class="header">
        <nav class="navbar">
            <ul>
                <li><a href="/admin/dashboard">Dashboard</a></li>
                <li><a href="/admin/users">Users</a></li>
                <li><a href="/admin/products">Products</a></li>
                <li><a href="/admin/orders">Orders</a></li>
                <li><a href="/admin/coupon">Coupon</a></li>
                <li><a href="/admin/offer">Offers</a></li>
                <li><a href="/admin/inventory">Inventory</a></li>
                <li><a id="same" href="#">Categories</a></li>
                <li><a href="/admin/salesReport">Sales Report</a></li>
            </ul>
            <div class="icons">
                <span>ðŸ””</span>
                <a href="/admin/profile"><span>ðŸ‘¤</span></a>
            </div>
        </nav>
    </header>

    <div class="container">
        <h1>Category Management</h1>

        <!-- Add Category Button -->
        <button type="button" class="btn btn-success" data-toggle="modal" data-target="#addCategoryModal">
            Add Category
        </button>

        <!-- Category Table -->
        <table>
            <thead>
                <tr>
                    <th>Category Name</th>
                    <th>Variant</th>
                    <th>Status</th>
                    <th>Edit</th>
                    <th>List/Unlist</th>
                </tr>
            </thead>
            <tbody>
                {{#each categories}}
                <tr>
                    <td>{{this.name}}</td>
                    <td>{{this.variant}}</td>
                    <td>{{#if this.isListed}}Listed{{else}}Unlisted{{/if}}</td>
                    <td>
                        <button class="btn btn-warning"
                            onclick="openEditModal('{{this._id}}', '{{this.name}}', '{{this.variant}}')">
                            Edit
                        </button>
                    </td>
                    <td>
                        <form action="/admin/categories/toggle-status/{{this._id}}" method="POST">
                            {{#if this.isListed}}
                            <button type="submit" class="unlist-button">Unlist</button>
                            {{else}}
                            <button type="submit" class="list-button">List</button>
                            {{/if}}
                        </form>
                    </td>
                </tr>
                {{/each}}
            </tbody>
        </table>
    </div>

    <!-- Add Category Modal -->
    <div class="modal fade" id="addCategoryModal" tabindex="-1" role="dialog" aria-labelledby="addCategoryModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addCategoryModalLabel">Add Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="/admin/categories/add" method="POST">
                        <div class="form-group">
                            <label for="categoryName">Category</label>
                            <input class="form-control" id="categoryName" name="name">
                            <small id="categoryNameError" class="form-text text-danger"></small>
                            <!-- Variant Input -->
                            <div class="form-group">
                                <label for="categoryVariant">Variant</label>
                                <input type="text" class="form-control" id="categoryVariant" name="variant">
                                <small id="categoryVariantError" class="form-text text-danger"></small>
                            </div>
                            <button type="submit" class="btn btn-primary">Add Category</button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Edit Category Modal -->
    <div class="modal fade" id="editCategoryModal" tabindex="-1" role="dialog" aria-labelledby="editCategoryModalLabel"
        aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editCategoryModalLabel">Edit Category</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form action="/admin/categories/edit" method="POST" id="editCategoryForm">
                        <input type="hidden" name="id" id="editCategoryId">
                        <!-- Category Dropdown -->
                        <div class="form-group">
                            <label for="editCategoryName">Category Name</label>
                            <input class="form-control" id="editCategoryName" name="name">
                            <small id="nameError" style="color: red; display: none;">Please select a category
                                name.</small>
                        </div>
                        <!-- Variant Input -->
                        <div class="form-group">
                            <label for="editCategoryVariant">Variant</label>
                            <input type="text" class="form-control" id="editCategoryVariant" name="variant">
                            <small id="variantError" style="color: red; display: none;">Please enter a variant.</small>
                        </div>
                        <button type="submit" class="btn btn-primary">Update Category</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


    <script src="https://code.jquery.com/jquery-3.5.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>
    <script>
        function openEditModal(id, name, variant) {
            $('#editCategoryId').val(id);
            $('#editCategoryName').val(name);
            $('#editCategoryVariant').val(variant);
            $('#editCategoryModal').modal('show');
        }
    </script>

    <!--=============add category validate===============-->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const categoryNameInput = document.getElementById("categoryName");
            const categoryVariantInput = document.getElementById("categoryVariant");
            const categoryNameError = document.getElementById("categoryNameError");
            const categoryVariantError = document.getElementById("categoryVariantError");
            const addCategoryButton = document.getElementById("addCategoryButton");
            const form = document.getElementById("addCategoryForm");

            async function validateCategoryName() {
                const value = categoryNameInput.value.trim();
                if (!value) {
                    categoryNameError.textContent = "Category name is required.";
                    return false;
                } else if (value.length < 3) {
                    categoryNameError.textContent = "Category name must be at least 3 characters.";
                    return false;
                } else {
                    const isDuplicate = await checkDuplicate("name", value);
                    if (isDuplicate) {
                        categoryNameError.textContent = "Category name give defferent.";
                        return false;
                    }
                    categoryNameError.textContent = "";
                    return true;
                }
            }

            async function validateCategoryVariant() {
                const value = categoryVariantInput.value.trim();
                if (!value) {
                    categoryVariantError.textContent = "Variant is required.";
                    return false;
                } else {
                    const isDuplicate = await checkDuplicate("variant", value);
                    if (isDuplicate) {
                        categoryVariantError.textContent = "Variant already exists.";
                        return false;
                    }
                    categoryVariantError.textContent = "";
                    return true;
                }
            }

            async function checkDuplicate(field, value) {
                try {
                    const response = await fetch(`/admin/categories/check-duplicate?${field}=${encodeURIComponent(value)}`);
                    const data = await response.json();
                    return data.isDuplicate;
                } catch (error) {
                    console.error("Error checking duplicate:", error);
                    return false;
                }
            }
            async function validateForm() {
                const isCategoryNameValid = await validateCategoryName();
                const isCategoryVariantValid = await validateCategoryVariant();
                addCategoryButton.disabled = !(isCategoryNameValid && isCategoryVariantValid);
            }

            categoryNameInput.addEventListener("input", validateForm);
            categoryVariantInput.addEventListener("input", validateForm);

            form.addEventListener("submit", async function (event) {
                await validateForm();
                if (addCategoryButton.disabled) {
                    event.preventDefault();
                }
            });
        });
    </script>

    <!--=============edit category validate===============-->
    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const editCategoryForm = document.getElementById("editCategoryForm");
            const editCategoryNameInput = document.getElementById("editCategoryName");
            const editCategoryVariantInput = document.getElementById("editCategoryVariant");
            const editCategoryIdInput = document.getElementById("editCategoryId");
            const nameError = document.getElementById("nameError");
            const variantError = document.getElementById("variantError");

            function validateEditCategoryName() {
                const value = editCategoryNameInput.value.trim();
                if (!value) {
                    nameError.textContent = "Category name is required.";
                    nameError.style.display = "block";
                    return false;
                } else if (value.length < 3) {
                    nameError.textContent = "Category name must be at least 3 characters.";
                    nameError.style.display = "block";
                    return false;
                }
                nameError.style.display = "none";
                return true;
            }

            function validateEditCategoryVariant() {
                const value = editCategoryVariantInput.value.trim();
                if (!value) {
                    variantError.textContent = "Variant is required.";
                    variantError.style.display = "block";
                    return false;
                }
                variantError.style.display = "none";
                return true;
            }

            async function checkDuplicateCategoryName() {
                const categoryId = editCategoryIdInput.value;
                const categoryName = editCategoryNameInput.value.trim();
                try {
                    const response = await fetch(`/admin/categories/check-duplicate`, {
                        method: "POST",
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ id: categoryId, name: categoryName }),
                    });
                    const data = await response.json();

                    if (!data.success) {
                        nameError.textContent = "Category name  give different.";
                        nameError.style.display = "block";
                        return false;
                    }
                    nameError.style.display = "none";
                    return true;
                } catch (error) {
                    console.error("Error checking duplicate name:", error);
                    return false;
                }
            }

            editCategoryNameInput.addEventListener("input", async function () {
                if (validateEditCategoryName()) {
                    await checkDuplicateCategoryName();
                }
            });

            editCategoryForm.addEventListener("submit", async function (event) {
                const isNameValid = validateEditCategoryName() && (await checkDuplicateCategoryName());
                const isVariantValid = validateEditCategoryVariant();

                if (!isNameValid || !isVariantValid) {
                    event.preventDefault(); 
                }
            });
        });
    </script>

</body>

</html>